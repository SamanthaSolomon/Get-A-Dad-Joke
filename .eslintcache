[{"/Users/Samantha/Desktop/GASEI/Unit 2/project-two/src/index.js":"1","/Users/Samantha/Desktop/GASEI/Unit 2/project-two/src/App.js":"2","/Users/Samantha/Desktop/GASEI/Unit 2/project-two/src/reportWebVitals.js":"3","/Users/Samantha/Desktop/GASEI/Unit 2/project-two/src/Components/Footer.js":"4","/Users/Samantha/Desktop/GASEI/Unit 2/project-two/src/Components/Header.js":"5","/Users/Samantha/Desktop/GASEI/Unit 2/project-two/src/Components/RandomButton.js":"6","/Users/Samantha/Desktop/GASEI/Unit 2/project-two/src/Components/SearchForm.js":"7","/Users/Samantha/Desktop/GASEI/Unit 2/project-two/src/Pages/About.js":"8","/Users/Samantha/Desktop/GASEI/Unit 2/project-two/src/Pages/Joke.js":"9","/Users/Samantha/Desktop/GASEI/Unit 2/project-two/src/Pages/Main.js":"10"},{"size":588,"mtime":1611191185404,"results":"11","hashOfConfig":"12"},{"size":635,"mtime":1611250315650,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1610598264167,"results":"14","hashOfConfig":"12"},{"size":297,"mtime":1611254743850,"results":"15","hashOfConfig":"12"},{"size":501,"mtime":1611252594421,"results":"16","hashOfConfig":"12"},{"size":431,"mtime":1611268097869,"results":"17","hashOfConfig":"12"},{"size":1020,"mtime":1611265344679,"results":"18","hashOfConfig":"12"},{"size":141,"mtime":1610931824219,"results":"19","hashOfConfig":"12"},{"size":964,"mtime":1611100144504,"results":"20","hashOfConfig":"12"},{"size":1810,"mtime":1611252536770,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1tbh2le",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},"/Users/Samantha/Desktop/GASEI/Unit 2/project-two/src/index.js",[],["44","45"],"/Users/Samantha/Desktop/GASEI/Unit 2/project-two/src/App.js",[],"/Users/Samantha/Desktop/GASEI/Unit 2/project-two/src/reportWebVitals.js",[],"/Users/Samantha/Desktop/GASEI/Unit 2/project-two/src/Components/Footer.js",[],"/Users/Samantha/Desktop/GASEI/Unit 2/project-two/src/Components/Header.js",[],"/Users/Samantha/Desktop/GASEI/Unit 2/project-two/src/Components/RandomButton.js",["46"],"/Users/Samantha/Desktop/GASEI/Unit 2/project-two/src/Components/SearchForm.js",["47"],"/Users/Samantha/Desktop/GASEI/Unit 2/project-two/src/Pages/About.js",[],"/Users/Samantha/Desktop/GASEI/Unit 2/project-two/src/Pages/Joke.js",[],"/Users/Samantha/Desktop/GASEI/Unit 2/project-two/src/Pages/Main.js",["48"],"import React from \"react\"\nimport {Route, Redirect} from \"react-router-dom\"\n\n//styles\nimport '../App.css';\n\n//components\nimport SearchForm from \"../Components/SearchForm\"\nimport RandomButton from \"../Components/RandomButton\"\n\n//pages\nimport Joke from \"./Joke\"\n\nconst Main = (props) => {\n\n//Searched Joke\n  const [searchJoke, setSearchJoke] = React.useState(null)\n\n  const getSearched = async (searchterm) => {\n    const response = await fetch(`https://icanhazdadjoke.com/search?page=1&limit=5&term=${searchterm}`,{\n        headers: {Accept: \"application/json\"}\n    })\n    const data = await response.json()\n    setSearchJoke(data)\n  }\n\n\n  //Random Joke\n  const [randomJoke, setRandomJoke]=React.useState(null)\n\n  const getRandom= async () => {  \n    const response = await fetch(`https://icanhazdadjoke.com`, {\n      headers: {Accept: \"application/json\"}\n    })\n    const data = await response.json()\n    setRandomJoke(data);\n  }\n\n\n    return(\n        <div>\n            <p className=\"para\">Preparing for a BBQ with the neighbors?<br></br> One of your kids having a sleepover? <br></br>Maybe your just taking a trip to the hardware store for some ducktape and nails. <br></br></p>\n            <p className=\"para\">Whatever the situation, we've got your dad joke needs covered. <span class=\"para__emphasis\">Search for jokes by keyword.</span> <br></br>Feeling looser than a bathing suit from the 80s? <br></br><span class=\"para__emphasis\">Get a random joke.</span></p>\n            <SearchForm jokeSearch={getSearched}/>\n            <RandomButton jokeRandom={getRandom} history={props.history}/>\n            <Route path=\"/joke\" render={(renderProps) => {\n                return <Joke {...renderProps} randomJoke={randomJoke} searchJoke={searchJoke}/>\n                }}/>\n        </div>\n    )\n}\n\nexport default Main",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":2,"column":9,"nodeType":"55","messageId":"56","endLine":2,"endColumn":13},{"ruleId":"53","severity":1,"message":"54","line":2,"column":9,"nodeType":"55","messageId":"56","endLine":2,"endColumn":13},{"ruleId":"53","severity":1,"message":"57","line":2,"column":16,"nodeType":"55","messageId":"56","endLine":2,"endColumn":24},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]